package views

import (
	"github.com/edgarsilva/go-scaffold/internal/db"
)

templ TodosPage(todos []db.Todo, count, pending int, filter string, layoutProps layoutProps) {
	@Layout(layoutProps) {
		@BackToHome("Back to home", "/")
		<section class="mt-16">
			@TodoCreateForm()
			@TodosList(todos)
			@TodosFooter(string(pending), filter)
		</section>
	}
}

templ TodoCreateForm() {
	<form hx-post="/todos" hx-swap="beforeend" hx-target="#todos" class="mb-6 flex">
		<fieldset class="join mx-auto w-full max-w-3xl drop-shadow-xl">
			<input
				id="todo"
				name="todo"
				type="text"
				placeholder="What needs to be done?"
				aria-label="Todo"
				placeholder="What needs to be done?"
				class="input input-bordered w-full join-item"
			/>
			<button class="btn btn-primary join-item" type="submit">Create</button>
		</fieldset>
	</form>
}

templ TodoCheckbox(t db.Todo) {
	<input
		id={ t.UID }
		class="checkbox checkbox-md"
		name={ "todo[" + t.UID + "]" }
		type="checkbox"
		if t.Completed {
			checked
			hx-patch={ "/todos/" + t.UID + "/uncheck" }
		} else {
			hx-patch={ "/todos/" + t.UID + "/check" }
		}
		hx-target="closest hgroup"
		hx-swap="outerHTML swap:0.1s"
	/>
	<span class="text-lg">
		if t.Completed {
			<s>{ t.Content }</s>
		} else {
			{ t.Content }
		}
	</span>
}

templ TodoContent(t db.Todo) {
	<hgroup class="form-control">
		<label class="flex items-center gap-4">
			@TodoCheckbox(t)
		</label>
	</hgroup>
}

templ TodoCard(t db.Todo) {
	<article class="card bg-base-100 shadow-xl w-full mx-auto border border-neutral-100">
		<div class="card-body">
			<div class="absolute right-8">
				<span class="badge badge-lg badge-info">High</span>
				<span class="badge badge-lg">ID: { t.UID }</span>
			</div>
			@TodoContent(t)
			<p class="card-actions justify-end">
				<button
					class="btn btn-error btn-outline"
					hx-delete={ "/todos/" + t.UID }
					hx-target="closest article"
					hx-swap="outerHTML swap:0.1s"
				>
					delete
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						with="24"
						height="24"
					>
						<path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"></path>
					</svg>
				</button>
				<button
					class="btn btn-primary"
					hx-post={ "/todos/" + t.UID + "/duplicate" }
					hx-target="#todos"
					hx-swap="beforeend settle:0.1s"
				>
					duplicate
					<svg
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						width="24"
						height="24"
					>
						<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75"></path>
					</svg>
				</button>
			</p>
		</div>
	</article>
}

templ TodosList(todos []db.Todo) {
	<section
		id="todos"
		role="list"
		class="flex flex-col gap-6 mx-auto max-w-3xl"
		hx-get="/todos/fragment/list"
		hx-trigger="fetchTodos from:body"
		hx-swap="outerHTML"
	>
		for _, t := range todos {
			@TodoCard(t)
		}
	</section>
}

templ TodosFooter(left string, filter string) {
	<footer
		class="container flex justify-center py-8"
		hx-get="/todos/fragment/footer"
		hx-trigger="refreshFooter from:body"
		hx-swap="outerHTML"
	>
		<ul
			class="menu bg-base-200 lg:menu-horizontal rounded-box"
			hx-target="closest footer"
		>
			<li class="">
				<a
					href="/todos?filter=all"
					class="contrast h-full flex items-center"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z"></path>
					</svg>
					All
					<span class="badge badge-sm">99+</span>
				</a>
			</li>
			<li>
				<a
					href="/todos?filter=pending"
					class="contrast"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"></path>
					</svg>
					Pending
					<span class="badge badge-sm">{ left }</span>
				</a>
			</li>
			<li>
				<a
					href="/todos?filter=completed"
					class="contrast"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5"></path>
					</svg>
					Completed
					<span class="badge badge-sm">99+</span>
				</a>
			</li>
		</ul>
	</footer>
}
