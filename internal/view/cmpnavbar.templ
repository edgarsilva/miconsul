package view

import "strings"

templ CmpNavbar(c *Ctx) {
	<header id="header" class="relative mb-8 lg:mb-12 bg-base-100 border-y border-base-content/10" hx-boost="true">
		<nav id="navbar" class="navbar rounded-lg p-4">
			<div class="navbar-start">
				<a href="/?timeframe=day" class="relative px-2 rounded-xl self-stretch flex items-center text-xl font-semibold hover:ring hover:ring-secondary/35 hover:bg-secondary/10 active:ring">
					<div class="avatar overflow-hidden mr-2">
						<div class="h-10">
							<img class="" src="/public/images/labcoat64.png" alt="miconsul logo"/>
						</div>
					</div>
					miconsul
				</a>
			</div>
			<div class="navbar-end flex items-center">
				@Search()
				@DesktopNav(c)
				@UserAvatar(c)
				@UIThemeBtn(c)
				@MobileNav(c)
			</div>
		</nav>
	</header>
}

templ UIThemeBtn(c *Ctx) {
	<div class="flex-none">
		@CmpBtnTheme(c.Theme)
	</div>
}

templ UserAvatar(c *Ctx) {
	<a href="/profile" class="px-2">
		@CmpAvatar(c.CurrentUser)
	</a>
}

templ Search() {
	<div class="flex gap-2 mr-2">
		<button class="p-1 hover:outline rounded-xl" aria-label="Global Search">
			@IconSearch("")
		</button>
		<kbd class="hidden md:kbd md:kbd-sm">ctrl</kbd>
		<kbd class="hidden md:kbd md:kbd-sm">k</kbd>
	</div>
}

func ActiveLink(c *Ctx, p string) templ.KeyValue[string, bool] {
	return templ.KV("underline underline-offset-4", strings.Contains(c.Path(), p))
}

templ DesktopNav(c *Ctx) {
	<div class="hidden md:flex">
		<a href="/appointments?timeframe=day" class={ "btn btn-ghost text-sm", ActiveLink(c, "/appointments") }>{ c.l("nav.appointments") }</a>
		<a href="/clinics" class={ "btn btn-ghost text-sm", ActiveLink(c, "/clinics") }>{ c.l("nav.clinics") }</a>
		<a href="/patients" class={ "btn btn-ghost text-sm", ActiveLink(c, "/patients") }>{ c.l("nav.patients") }</a>
		<div class="tooltip tooltip-bottom hidden" data-tip={ c.l("str.coming_soon") }>
			<a href="#" class="btn btn-ghost text-sm text-base-content/35">{ c.l("nav.exp_rev") }</a>
		</div>
		<div class="divider divider-horizontal"></div>
		if c.CurrentUser.IsLoggedIn() {
			<a class="btn btn-ghost" href="/logout">
				{ c.l("btn.logout") }
				@IconSignout("")
			</a>
		} else {
			<a class="btn btn-ghost" href="/login">
				{ c.l("btn.login") }
				@IconSignin("")
			</a>
		}
	</div>
}

templ MobileNav(c *Ctx) {
	<div class="md:hidden flex-none dropdown dropdown-end">
		<button tabindex="0" role="button" class="btn btn-square btn-ghost">
			@IconMenu()
		</button>
		<ul
			tabindex="0"
			class="menu dropdown-content bg-base-100 rounded-box z-[1] mt-3 w-52 p-2 shadow"
		>
			<li><a href="/appointments?timeframe=day" class="btn btn-ghost justify-start">{ c.l("nav.appointments") }</a></li>
			<li><a href="/clinics" class="btn btn-ghost justify-start">{ c.l("nav.clinics") }</a></li>
			<li><a href="/patients" class="btn btn-ghost justify-start">{ c.l("nav.patients") }</a></li>
			if c.CurrentUser.IsLoggedIn() {
				<li>
					<a href="/logout" class="btn btn-ghost justify-start">
						{ c.l("btn.logout") }
						@IconSignout("")
					</a>
				</li>
			} else {
				<li>
					<a href="/login" class="btn btn-ghost justify-start">
						{ c.l("btn.login") }
						@IconSignin("")
					</a>
				</li>
			}
		</ul>
	</div>
}
