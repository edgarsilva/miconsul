package view

import (
	"github.com/edgarsilva/go-scaffold/internal/model"
	"strconv"
)

templ PatientsPage(patients []model.Patient, patient model.Patient, lp layoutProps) {
	@Layout(lp) {
		if patient.ID != "" {
			<div class="px-4 lg:px-8">
				@CmpBtnBack(l(lp.Locale, "btn.back"), "/patients")
			</div>
			<section id="patient_profile_cont" class="grow flex flex-col px-0 sm:px-4 md:px-8 py-8 lg:justify-center lg:w-2/3 lg:max-w-4xl lg:mx-auto">
				if patient.ID == "" || patient.ID == "new" {
					<h1 class="px-4 sm:px-0 font-bold text-2xl pb-0 w-full">{ l(lp.Locale, "str.new_patient") }</h1>
				} else {
					<h1 class="px-4 sm:px-0 font-bold text-2xl pb-0 w-full">{ l(lp.Locale, "str.edit_patient") }</h1>
				}
				@PatientProfile(patient, lp)
			</section>
		} else {
			<div class="px-4 lg:px-8">
				@CmpBtnBack(l(lp.Locale, "btn.back"), "/")
			</div>
			<section class="grow flex flex-col px-0 sm:px-4 py-8 md:py-16 lg:w-2/3 lg:max-w-4xl lg:mx-auto">
				<div
					class="relative"
				>
					<hgroup
						class="flex justify-between items-center pb-4 pl-4 sm:pl-0"
						hx-boost="true"
					>
						<h1 class="font-bold text-2xl">{ l(lp.Locale, "str.patients") }</h1>
						<a
							href="/patients/new"
							class="btn btn-primary btn-sm"
						>
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								<path stroke-linecap="round" stroke-linejoin="round" d="M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z"></path>
							</svg>
							{ l(lp.Locale, "btn.new_patient") }
						</a>
					</hgroup>
					if (len(patients) > 0) {
						@PatientsList(patients, lp)
					} else {
						@PatientsEmptyList(lp)
					}
				</div>
			</section>
		}
	}
}

templ PatientsList(patients []model.Patient, lp layoutProps) {
	<ul id="patients_list" role="list" class="app-card divide-y divide-base-content/10 overflow-hidden px-4 py-2">
		for _, patient := range patients {
			@PatientLi(patient, lp)
		}
		<li class="relative flex justify-between gap-x-6 px-2 py-4 hover:bg-base-200/75">
			<div class="flex items-center min-w-0 gap-x-4">
				<img class="h-12 w-12 flex-none rounded-full bg-base-200/75" src="https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt=""/>
				<div class="min-w-0">
					<p class="font-semibold text-base-content">
						<a class="flex items-center gap-2" href="#">
							<span class="absolute inset-x-0 -top-px bottom-0"></span>
							<span class="relative inline-flex h-2 w-2">
								<span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-emerald-400 opacity-90"></span>
								<span class="relative inline-flex rounded-full h-2 w-2 bg-emerald-500"></span>
							</span>
							Michael Foster
							<span class="badge badge-success badge-sm mr-2">{ l(lp.Locale, "str.appointment_today") }</span>
						</a>
					</p>
					<p class="flex text-xs text-base-content/60">
						<a href="mailto:michael.foster@example.com" class="relative truncate hover:underline">michael.foster@example.com</a>
					</p>
				</div>
			</div>
			<div class="flex shrink-0 items-center gap-x-4">
				<div class="hidden sm:flex sm:flex-col sm:items-end">
					<div class="flex gap-1 z-10 mb-2">
						<button class="btn btn-primary btn-outline">
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"></path>
							</svg>
							{ l(lp.Locale, "btn.appointments") }
						</button>
						<button class="btn btn-secondary btn-outline">
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
								<path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"></path>
							</svg>
							{ l(lp.Locale, "btn.edit") }
						</button>
					</div>
					<p class="mt-1 text-xs leading-5 text-base-content/60">
						Last seen <time datetime="2023-01-23T13:23Z">3h ago</time>
					</p>
				</div>
			</div>
		</li>
	</ul>
}

templ PatientLi(patient model.Patient, lp layoutProps) {
	<li class="relative flex justify-between items-center gap-x-6 px-2 py-2 hover:bg-base-200/75">
		<div class="flex items-center min-w-0 gap-x-4">
			@CmpAvatar(patient)
			<div class="min-w-0">
				<p>
					<span href="/patients" class="font-semibold text-base-content">
						{ patient.Name() }
					</span>
				</p>
				<p class="text-xs leading-5 text-base-content/50">
					{ l(lp.Locale, "str.last_appointment") }
					<time datetime="2022-01-10T17:00">10/Ago/2022 5:00 PM</time>
				</p>
			</div>
		</div>
		<div class="flex shrink-0 items-center gap-x-4">
			<div class="hidden sm:flex sm:flex-col sm:items-end">
				<div class="flex gap-2 z-10 mb-2">
					<a
						class="btn btn-outline btn-primary"
						href={ templ.URL("/appointments?patientId=" + patient.ID) }
					>
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"></path>
						</svg>
						{ l(lp.Locale, "btn.appointments") }
					</a>
					<a
						class="btn btn-outline btn-secondary"
						href={ templ.URL("/patients/" + patient.ID) }
						hx-boost="true"
					>
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"></path>
						</svg>
						{ l(lp.Locale, "btn.edit") }
					</a>
				</div>
			</div>
		</div>
	</li>
}

templ PatientDeleteForm(patient model.Patient, lp layoutProps) {
	<form
		method="POST"
		action={ templ.URL("/patients/"+patient.ID) + "/delete" }
		hx-delete={ "/patients/" + patient.ID }
		hx-confirm={ l(lp.Locale, "str.are_you_sure") }
		hx-select="#patients_list"
		hx-target="#patients_list"
	>
		<button type="submit" class="btn btn-sm btn-circle">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
				<path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"></path>
			</svg>
		</button>
	</form>
}

templ PatientsEmptyList(lp layoutProps) {
	<div class="app-card flex">
		<a href="/patients/new" class="relative block w-full rounded-lg border-2 border-dashed border-base-content/30 p-12 text-center hover:border-base-content/40 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
			<svg
				class="mx-auto w-12 h-12 text-base-content/60"
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z"></path>
			</svg>
			<span class="mt-2 block text-sm font-semibold">{ l(lp.Locale, "str.create_new_patient") }</span>
		</a>
	</div>
}

templ PatientProfile(patient model.Patient, lp layoutProps) {
	<div id="patient_profile" class="space-y-10 divide-y divide-base-content/10">
		<div class="grid grid-cols-1 gap-x-8 gap-y-8 pt-10 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.personal_info") }</h2>
				<p class="mt-1 text-sm leading-6 text-base-content/60">{ l(lp.Locale, "str.personal_info_desc") }</p>
			</div>
			@PatientForm(patient, lp) {
				<input type="hidden" name="id" value={ patient.ID } id="pi_patient_id"/>
				<div class="px-4 py-6 sm:p-8">
					<div class="grid max-w-2xl grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
						<div class="col-span-full">
							<label for="profile_pic" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.profile_pic") }</label>
							<div class="mt-2 flex items-center gap-x-3">
								if patient.ProfilePic != "" {
									<figure class="flex flex-col gap-1 items-center" id="avatar_pic">
										<div class="avatar">
											<div class="w-12 rounded-full">
												<img src={ string(templ.URL(patient.ProfilePic)) }/>
											</div>
										</div>
										<a
											href={ templ.URL("/patients/" + patient.ID + "/removepic") }
											hx-patch={ "/patients/" + patient.ID + "/removepic" }
											hx-select="#avatar_pic"
											hx-swap="outerHTML"
											hx-target="closest figure"
											class="link text-xs link-secondary"
										>{ l(lp.Locale, "btn.remove") }</a>
									</figure>
								} else {
									<figure class="flex flex-col gap-2" id="avatar_pic">
										<div class="avatar placeholder">
											<div class="bg-neutral text-neutral-content rounded-full w-12">
												<span class="text-xl">{ patient.Initials() }</span>
											</div>
										</div>
									</figure>
								}
								<input
									id="profile_pic"
									name="profilePic"
									type="file"
									class="file-input file-input-bordered w-full file-input-primary"
									accept="image/*"
								/>
							</div>
						</div>
						<div class="sm:col-span-3">
							<label for="first_name" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.first_name") }</label>
							<div class="mt-2">
								<input required min="2" type="text" name="firstName" value={ patient.FirstName } id="first_name" autocomplete="given-name" class="input input-bordered block w-full"/>
								if patient.FieldError("firstName") != "" {
									<div class="label">
										<span class="label-text-alt text-error">{ patient.FieldError("firstName") }</span>
									</div>
								}
							</div>
						</div>
						<div class="sm:col-span-3">
							<label for="last_name" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.last_name") }</label>
							<div class="mt-2">
								<input required min="2" type="text" name="lastName" value={ patient.LastName } id="last_name" autocomplete="family-name" class="input input-bordered block w-full"/>
								if patient.FieldError("lastName") != "" {
									<div class="label">
										<span class="label-text-alt text-error">{ patient.FieldError("lastName") }</span>
									</div>
								}
							</div>
						</div>
						<div class="sm:col-span-4">
							<label for="phone" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.phone") }</label>
							<div class="mt-2">
								<input required type="tel" name="phone" value={ patient.Phone } id="phone" autocomplete="tel" class="input input-bordered block w-full"/>
								if patient.FieldError("phone") != "" {
									<div class="label">
										<span class="label-text-alt text-error">{ patient.FieldError("phone") }</span>
									</div>
								}
							</div>
						</div>
						<div class="sm:col-span-4">
							<label for="email" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.email_address") }</label>
							<div class="mt-2">
								<input type="email" name="email" value={ patient.Email } id="email" autocomplete="email" class="input input-bordered block w-full"/>
								if patient.FieldError("email") != "" {
									<div class="label">
										<span class="label-text-alt text-error">{ patient.FieldError("email") }</span>
									</div>
								}
							</div>
						</div>
						<div class="sm:col-span-4">
							<label for="age" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.age") }</label>
							<div class="mt-2">
								<input
									required
									min="0"
									max="120"
									type="number"
									id="age"
									name="age"
									if patient.Age == 0 {
										value=""
									} else {
										value={ strconv.Itoa(patient.Age) }
									}
									autocomplete="age"
									class="input input-bordered block w-full"
								/>
							</div>
						</div>
						<div class="sm:col-span-4">
							<label for="ocupation" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.ocupation") }</label>
							<div class="mt-2">
								<input type="text" name="ocupation" value={ patient.Ocupation } id="ocupation" autocomplete="ocupation" class="input input-bordered block w-full"/>
							</div>
						</div>
						<div class="col-span-full">
							<label for="cover-photo" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.cover_photo") }</label>
							<div class="mt-2 flex justify-center rounded-lg border border-dashed border-base-content/25 px-6 py-10">
								<div class="text-center">
									<svg class="mx-auto h-12 w-12 text-base-content/60" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
										<path fill-rule="evenodd" d="M1.5 6a2.25 2.25 0 012.25-2.25h16.5A2.25 2.25 0 0122.5 6v12a2.25 2.25 0 01-2.25 2.25H3.75A2.25 2.25 0 011.5 18V6zM3 16.06V18c0 .414.336.75.75.75h16.5A.75.75 0 0021 18v-1.94l-2.69-2.689a1.5 1.5 0 00-2.12 0l-.88.879.97.97a.75.75 0 11-1.06 1.06l-5.16-5.159a1.5 1.5 0 00-2.12 0L3 16.061zm10.125-7.81a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0z" clip-rule="evenodd"></path>
									</svg>
									<div class="mt-4 flex text-sm leading-6 text-base-content/60">
										<label for="file-upload" class="relative link link-primary font-semibold leading-6">
											<span>{ l(lp.Locale, "str.upload_file") }</span>
											<input id="file-upload" name="profilePic" type="file" class="sr-only"/>
										</label>
										<p class="pl-1">{ l(lp.Locale, "str.or_drag_and_drop") }</p>
									</div>
									<p class="text-xs leading-5 text-base-content/60">PNG, JPG, GIF { l(lp.Locale, "str.up_to_10mb") }</p>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="flex items-center justify-end gap-x-6 border-t border-base-content/10 px-4 py-4 sm:px-8">
					<button type="button" class="btn btn-ghost">{ l(lp.Locale, "btn.cancel") }</button>
					<button type="submit" class="btn btn-primary">{ l(lp.Locale, "btn.save") }</button>
				</div>
			}
		</div>
		<div class="grid grid-cols-1 gap-x-8 gap-y-8 pt-10 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.address") }</h2>
				<p class="mt-1 text-sm leading-6 text-base-content/60">{ l(lp.Locale, "str.address_desc") }</p>
			</div>
			@PatientForm(patient, lp) {
				<input type="hidden" name="id" value={ patient.ID } id="address_patient_id"/>
				<div class="px-4 py-6 sm:p-8">
					<div class="grid max-w-2xl grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
						<div class="col-span-full">
							<label for="street-address" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.address_street") }</label>
							<div class="mt-2">
								<input type="text" name="addressLine1" value={ patient.Address.Line1 } id="address_line1" autocomplete="street-address" class="input input-bordered block w-full"/>
							</div>
						</div>
						<div class="sm:col-span-2 sm:col-start-1">
							<label for="city" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.address_city") }</label>
							<div class="mt-2">
								<input type="text" name="addressCity" value={ patient.Address.City } id="address_city" autocomplete="address-level2" class="input input-bordered block w-full"/>
							</div>
						</div>
						<div class="sm:col-span-2">
							<label for="region" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.address_state") }</label>
							<div class="mt-2">
								<input type="text" name="addressState" value={ patient.Address.State } id="address_state" autocomplete="address-level1" class="input input-bordered block w-full"/>
							</div>
						</div>
						<div class="sm:col-span-2">
							<label for="postal-code" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.address_zip_code") }</label>
							<div class="mt-2">
								<input type="text" name="addressZipCode" value={ patient.Address.Zip } id="address_zip_code" autocomplete="postal-code" class="input input-bordered block w-full"/>
							</div>
						</div>
						<div class="sm:col-span-4">
							<label for="country" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.address_country") }</label>
							<div class="mt-2">
								<select id="country" name="addressCountry" autocomplete="country-name" class="select select-bordered block w-full">
									@CountryOption("none", "none", patient.Country)
									@CountryOption("Mexico", "Mexico", patient.Country)
									@CountryOption("United States", "United States", patient.Country)
									@CountryOption("Canada", "Canada", patient.Country)
								</select>
							</div>
						</div>
					</div>
				</div>
				<div class="flex items-center justify-end gap-x-6 border-t border-base-content/10 px-4 py-4 sm:px-8">
					<button type="button" class="btn btn-ghost">{ l(lp.Locale, "btn.cancel") }</button>
					<button type="submit" class="btn btn-primary">{ l(lp.Locale, "btn.save") }</button>
				</div>
			}
		</div>
		<div class="grid grid-cols-1 pt-8 gap-x-8 gap-y-8 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.medical_profile") }</h2>
				<p class="mt-1 text-sm leading-6 text-base-content/60">{ l(lp.Locale, "str.medical_profile_desc") }</p>
			</div>
			@PatientForm(patient, lp) {
				<input type="hidden" name="id" value={ patient.ID } id="mb_patient_id"/>
				<div class="px-4 py-6 sm:p-8">
					<div class="grid max-w-2xl grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
						<div class="col-span-full">
							<label for="website" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.family_history") }</label>
							<div class="mt-2">
								<textarea
									name="familyHistory"
									class="textarea textarea-bordered w-full block"
									placeholder={ l(lp.Locale, "str.family_history_ph") }
								>{ patient.FamilyHistory }</textarea>
							</div>
						</div>
						<div class="col-span-full">
							<label for="website" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.background") }</label>
							<div class="mt-2">
								<textarea
									name="medicalBackground"
									class="textarea textarea-bordered w-full block"
									placeholder={ l(lp.Locale, "str.background_ph") }
								>{ patient.MedicalBackground }</textarea>
							</div>
						</div>
						<div class="col-span-full">
							<label for="about" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.notes") }</label>
							<div class="mt-2">
								<textarea
									name="notes"
									class="textarea textarea-bordered w-full block"
									placeholder={ l(lp.Locale, "str.notes_ph") }
								>
									{ patient.Notes }
								</textarea>
							</div>
						</div>
					</div>
				</div>
				<div class="flex items-center justify-end gap-x-6 border-t border-base-content/10 px-4 py-4 sm:px-8">
					<button type="button" class="btn btn-ghost">{ l(lp.Locale, "btn.cancel") }</button>
					<button type="submit" class="btn btn-primary">{ l(lp.Locale, "btn.save") }</button>
				</div>
			}
		</div>
		<div class="grid grid-cols-1 gap-x-8 gap-y-8 pt-10 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.notifications") }</h2>
				<p class="mt-1 text-sm leading-6">{ l(lp.Locale, "str.notifications_desc") }</p>
			</div>
			@PatientForm(patient, lp) {
				<input type="hidden" name="id" value={ patient.ID } id="no_patient_id"/>
				<div class="px-4 py-6 sm:p-8">
					<div class="max-w-2xl space-y-10">
						<fieldset>
							<legend class="text-sm font-semibold leading-6">{ l(lp.Locale, "str.notifications_about") }</legend>
							<div class="mt-6 space-y-6">
								<label class="relative flex gap-x-3">
									if patient.EnableNotifications {
										<input name="enableNotifications" value="1" type="checkbox" checked="checked" class="checkbox"/>
									} else {
										<input name="enableNotifications" value="1" type="checkbox" class="checkbox"/>
									}
									<div class="text-sm leading-6">
										<span class="font-medium">{ l(lp.Locale, "str.notifications_appointment_lifecycle") }</span>
										<p class="text-base-content/60">{ l(lp.Locale, "str.notifications_appointment_lifecycle_desc") }</p>
									</div>
								</label>
							</div>
						</fieldset>
						<fieldset>
							<legend class="text-sm font-semibold leading-6">{ l(lp.Locale, "str.notifications_via") }</legend>
							<div class="mt-6 space-y-6">
								<label class="flex items-center gap-x-3 text-sm font-medium leading-6">
									<input
										name="viaEmail"
										value="1"
										type="checkbox"
										class="checkbox"
										if patient.ViaEmail {
											checked
										}
									/>
									Email
									<figure aria-lable="whatsapp icon" class="h-6 w-6">
										@IconColorGmail()
									</figure>
								</label>
								<label class="flex items-center gap-x-3 text-sm font-medium leading-6">
									<input
										name="viaWhatsapp"
										value="1"
										type="checkbox"
										class="checkbox"
										if patient.ViaWhatsapp {
											checked
										}
									/>
									Whatsapp
									<figure aria-lable="whatsapp icon" class="h-6 w-6">
										@IconColorWhatsapp()
									</figure>
								</label>
								<label class="flex items-center gap-x-3 text-sm font-medium leading-6">
									<input
										name="viaTelegram"
										value="1"
										type="checkbox"
										class="checkbox"
										if patient.ViaTelegram {
											checked
										}
									/>
									Telegram
									<figure aria-lable="whatsapp icon" class="h-6 w-6">
										@IconColorTelegram()
									</figure>
								</label>
								<label class="flex items-center gap-x-3 text-sm font-medium leading-6">
									<input
										name="viaMessenger"
										value="1"
										type="checkbox"
										class="checkbox"
										if patient.ViaMessenger {
											checked
										}
									/>
									Messenger
									<figure aria-lable="whatsapp icon" class="h-6 w-6">
										@IconColorMessenger()
									</figure>
								</label>
							</div>
						</fieldset>
					</div>
				</div>
				<div class="flex items-center justify-end gap-x-6 border-t border-base/content/10 px-4 py-4 sm:px-8">
					<button type="button" class="btn btn-ghost">{ l(lp.Locale, "btn.cancel") }</button>
					<button type="submit" class="btn btn-primary">{ l(lp.Locale, "btn.save") }</button>
				</div>
			}
		</div>
	</div>
}

templ PatientForm(patient model.Patient, lp layoutProps) {
	<form
		class="relative bg-base-100 shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2"
		method="POST"
		enctype="multipart/form-data"
		if patient.ID != "" && patient.ID != "new" {
			hx-patch={ "/patients/" + patient.ID }
			action={ templ.URL("/patients/" + patient.ID + "/patch") }
		} else {
			hx-post="/patients"
			action="/patients"
		}
		hx-target="closest #patient_profile_cont"
		hx-select="#patient_profile_cont"
		hx-swap="outerHTML"
	>
		<span class="absolute badge badge-success badge-sm p-2 top-2 right-2 htmx-indicator">
			<span class="loading loading-ring loading-sm"></span>
		</span>
		{ children... }
	</form>
}

templ CountryOption(label, value, country string) {
	<option
		value={ value }
		if value == country {
			selected
		}
	>{ label }</option>
}
