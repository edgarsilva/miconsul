package view

import (
	"github.com/edgarsilva/go-scaffold/internal/model"
	"strconv"
	"time"
)

templ AppointmentsPage(appointments []model.Appointment, lp *Ctx) {
	@Layout(lp) {
		<div class="px-4 lg:px-8">
			@CmpBtnBack(l(lp.Locale, "btn.back"), "/")
		</div>
		<section class="grow flex flex-col px-0 sm:px-4 py-8 md:py-16 lg:w-2/3 lg:max-w-4xl lg:mx-auto">
			<div
				class="relative"
			>
				<hgroup
					class="flex justify-between items-center pb-4 pl-4 sm:pl-0"
					hx-boost="true"
				>
					<h1 class="font-bold text-2xl">{ l(lp.Locale, "str.appointments") }</h1>
					<a
						href="/appointments/new"
						class="btn btn-primary btn-sm"
					>
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
							<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"></path>
						</svg>
						{ l(lp.Locale, "btn.new") }
					</a>
				</hgroup>
				@AppointmentsList(appointments, false, lp)
			</div>
		</section>
	}
}

templ AppointmentPage(appointment model.Appointment, patients []model.Patient, clinics []model.Clinic, lp *Ctx) {
	@Layout(lp) {
		<div class="px-4 lg:px-8">
			@CmpBtnBack(l(lp.Locale, "btn.back"), "/appointments")
		</div>
		<section id="appointment_profile_cont" class="grow flex flex-col px-0 sm:px-4 md:px-8 py-8 lg:justify-center lg:w-2/3 lg:max-w-4xl lg:mx-auto">
			if appointment.ID == "" || appointment.ID == "new" {
				<h1 class="px-4 sm:px-0 font-bold text-2xl pb-0 w-full">{ l(lp.Locale, "str.new_appointment") }</h1>
			} else {
				<h1 class="px-4 sm:px-0 font-bold text-2xl pb-0 w-full">{ l(lp.Locale, "str.edit_appointment") }</h1>
			}
			@AppointmentCont(lp, appointment, patients, clinics)
		</section>
	}
}

templ AppointmentsList(appointments []model.Appointment, showTitle bool, lp *Ctx) {
	<section class="app-card col-span-2 flex flex-col pt-4">
		<div class="relative items-center flex justify-between border-b border-base-coentent/10 pb-2" hx-boost="true">
			<h3 class="font-semibold text-xl flex items-center gap-4">
				if showTitle {
					{ l(lp.Locale, "str.appointments") }
				}
				if lp.Query("patientId", "") != "" {
					<a href={ templ.URL(lp.Path() + QueryParamsStr(lp, "patientId=")) } class="badge badge-secondary badge-outline gap-2 hover:bg-secondary hover:text-secondary-content">
						if patient, ok := lp.Locals("patient").(model.Patient); ok {
							{ patient.Email }
						}
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="inline-block w-4 h-4"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
					</a>
				}
			</h3>
			<details class="absolute right-0 dropdown hidden ">
				<summary class="btn btn-square btn-ghost">
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z"></path>
					</svg>
				</summary>
				<ul class="p-2 shadow menu dropdown-content z-[1] bg-base-100 rounded-box w-52">
					<li><a href="#" class="text-base-content/50 hover:text-base-content/80 rounded-md px-3 py-2 text-sm font-medium">{ l(lp.Locale, "nav.my_day") }</a></li>
					<li><a href="#" class="bg-base-100 text-base-content/80 rounded-md px-3 py-2 text-sm font-medium" aria-current="page">{ l(lp.Locale, "nav.my_week") }</a></li>
					<li><a href="#" class="text-base-content/50 hover:text-base-content/80 rounded-md px-3 py-2 text-sm font-medium">{ l(lp.Locale, "nav.my_month") }</a></li>
				</ul>
			</details>
			<div class="lg:block">
				<nav class="flex gap-2" aria-label="Tabs">
					<a
						href={ templ.URL(lp.Path() + QueryParamsStr(lp, "timeframe=day")) }
						class={ "text-base-content/50 hover:text-base-content/70 rounded-md px-3 py-2 text-sm font-medium", templ.KV("bg-secondary/35 text-secondary-content", lp.Query("timeframe") == "day") }
					>{ l(lp.Locale, "nav.my_day") }</a>
					<a
						href={ templ.URL(lp.Path() + QueryParamsStr(lp, "timeframe=week")) }
						class={ "text-base-content/50 hover:text-base-content/70 rounded-md px-3 py-2 text-sm font-medium", templ.KV("bg-secondary/15 text-secondary-content", lp.Query("timeframe") == "week") }
						aria-current="page"
					>{ l(lp.Locale, "nav.my_week") }</a>
					<a
						href={ templ.URL(lp.Path() + QueryParamsStr(lp, "timeframe=month")) }
						class={ "text-base-content/50 hover:text-base-content/70 rounded-md px-3 py-2 text-sm font-medium", templ.KV("bg-secondary/15 text-secondary-content", lp.Query("timeframe") == "month") }
					>{ l(lp.Locale, "nav.my_month") }</a>
				</nav>
			</div>
		</div>
		if (len(appointments) > 0) {
			<ul class="divide-y divide-base-content-10 text-sm leading-6" hx-boost="true">
				for _, appointment := range appointments {
					@AppointmentLi(appointment, lp)
				}
			</ul>
		} else {
			@AppointmentsEmptyList(lp)
		}
	</section>
}

templ AppointmentsTimeframe(path, lp *Ctx) {
	<nav class="flex gap-2" aria-label="Tabs">
		<a
			href="/appointments?timeframe=day"
			class={ "text-base-content/50 hover:text-base-content/70 rounded-md px-3 py-2 text-sm font-medium", templ.KV("bg-secondary/35 text-secondary-content", lp.Query("timeframe") == "day") }
		>{ l(lp.Locale, "nav.my_day") }</a>
		<a
			href="/appointments?timeframe=week"
			class={ "text-base-content/50 hover:text-base-content/70 rounded-md px-3 py-2 text-sm font-medium", templ.KV("bg-secondary/15 text-secondary-content", lp.Query("timeframe") == "week") }
			aria-current="page"
		>{ l(lp.Locale, "nav.my_week") }</a>
		<a
			href="/appointments?timeframe=month"
			class={ "text-base-content/50 hover:text-base-content/70 rounded-md px-3 py-2 text-sm font-medium", templ.KV("bg-secondary/15 text-secondary-content", lp.Query("timeframe") == "month") }
		>{ l(lp.Locale, "nav.my_month") }</a>
	</nav>
}

templ AppointmentLi(appointment model.Appointment, lp *Ctx) {
	<li class="relative flex space-x-4 py-4 xl:static">
		<figure aria-label="patient picture" class="h-14 w-14 flex-none rounded-full">
			@CmpAvatar(appointment.Patient, "w-14 h-14")
		</figure>
		<div class="flex-auto">
			<hgroup class="flex items-center gap-2">
				<a href={ templ.URL("/appointments" + QueryParamsStr(lp, "patientId="+appointment.PatientID)) } class="link link-hover">
					<h3 class="pr-10 font-semibold text-base-content xl:pr-0">
						{ appointment.Patient.Name() }
					</h3>
				</a>
				<span class="text-base-content/50">
					(
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 inline-block">
						<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z"></path>
					</svg>
					{ appointment.Patient.Phone }
					)
				</span>
			</hgroup>
			<dl class="mt-2 flex flex-col text-base-content xl:flex-row">
				<div class="flex items-start space-x-3 text-base-content/50">
					<dt class="mt-0.5">
						<span class="sr-only">{ l(lp.Locale, "str.date") }</span>
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="w-5 h-5"
						>
							<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"></path>
						</svg>
						if !appointment.RescheduledAt.IsZero() {
							<svg
								class="w-5 h-5 mt-1 text-info"
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
							>
								<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 12c0-1.232-.046-2.453-.138-3.662a4.006 4.006 0 0 0-3.7-3.7 48.678 48.678 0 0 0-7.324 0 4.006 4.006 0 0 0-3.7 3.7c-.017.22-.032.441-.046.662M19.5 12l3-3m-3 3-3-3m-12 3c0 1.232.046 2.453.138 3.662a4.006 4.006 0 0 0 3.7 3.7 48.656 48.656 0 0 0 7.324 0 4.006 4.006 0 0 0 3.7-3.7c.017-.22.032-.441.046-.662M4.5 12l3 3m-3-3-3 3"></path>
							</svg>
						}
					</dt>
					<dd class="flex flex-col">
						<time datetime={ appointment.BookedAt.Format(FormTimeFormat) }>{ appointment.BookedAt.Format(ViewTimeFormat) }</time>
						if !appointment.RescheduledAt.IsZero() {
							<time class="font-semibold text-info" datetime="2022-01-12T15:00">Jan 21th, 2022 at 3:00 PM</time>
						}
					</dd>
				</div>
				<div class="mt-2 flex items-center space-x-3 xl:ml-3.5 xl:mt-0 xl:border-l xl:border-base-300 xl:border-opacity-50 xl:pl-3.5">
					<dt>
						<span class="sr-only">{ l(lp.Locale, "str.location") }</span>
						<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M9.69 18.933l.003.001C9.89 19.02 10 19 10 19s.11.02.308-.066l.002-.001.006-.003.018-.008a5.741 5.741 0 00.281-.14c.186-.096.446-.24.757-.433.62-.384 1.445-.966 2.274-1.765C15.302 14.988 17 12.493 17 9A7 7 0 103 9c0 3.492 1.698 5.988 3.355 7.584a13.731 13.731 0 002.273 1.765 11.842 11.842 0 00.976.544l.062.029.018.008.006.003zM10 11.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z" clip-rule="evenodd"></path>
						</svg>
					</dt>
					<dd>
						{ appointment.Clinic.Name }
						<span class="ml-2">
							@CmpBadgeStatus(appointment.Status, lp)
						</span>
					</dd>
				</div>
			</dl>
		</div>
		@AppointmentActions(appointment, lp)
	</li>
}

templ AppointmentActions(appointment model.Appointment, lp *Ctx) {
	<div class="hidden gap-2 items-center lg:flex">
		<a href={ templ.URL("/appointments/" + appointment.ID + "/begin") } class="btn btn-outline btn-primary">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25"></path>
			</svg>
			{ l(lp.Locale, "btn.open") }
		</a>
		<a href={ templ.URL("/appointments/" + appointment.ID) } class="btn btn-outline btn-secondary">
			<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
				<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"></path>
			</svg>
			{ l(lp.Locale, "btn.change") }
		</a>
	</div>
}

templ AppointmentsEmptyList(lp *Ctx) {
	<div class="flex mt-4">
		<a href="/appointments/new" class="relative block w-full rounded-lg border-2 border-dashed border-base-content/10 p-12 text-center hover:border-base-content/30 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
			@IconHeroOutlineCalendar("mx-auto w-12 h-12 text-base-content/30")
			<span class="mt-2 block text-sm font-semibold">{ l(lp.Locale, "str.create_new_appointment") }</span>
			<p class="mt-1 text-sm text-base-content/40">No se encontraron citas.</p>
		</a>
	</div>
}

templ AppointmentCont(lp *Ctx, appointment model.Appointment, patients []model.Patient, clinics []model.Clinic) {
	<div id="appointment_profile" class="space-y-10 divide-y divide-base-content/10">
		<div class="grid grid-cols-1 gap-x-8 gap-y-8 pt-10 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.apnt_step_1") }</h2>
				<p class="mt-1 text-sm leading-6 text-base-content/50">{ l(lp.Locale, "str.apnt_step_1_desc") }</p>
			</div>
			@ClinicSearch(lp, clinics)
		</div>
		<div class="grid grid-cols-1 gap-x-8 gap-y-8 pt-10 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.apnt_step_2") }</h2>
				<p class="mt-1 text-sm leading-6 text-base-content/50">{ l(lp.Locale, "str.apnt_step_2_desc") }</p>
			</div>
			@PatientSearch(lp, patients)
		</div>
		<div class="grid grid-cols-1 gap-x-8 gap-y-8 pt-10 md:grid-cols-3">
			<div class="px-4 sm:px-0">
				<h2 class="text-base font-semibold leading-7">{ l(lp.Locale, "str.apnt_step_3") }</h2>
				<p class="mt-1 text-sm leading-6 text-base-content/50">{ l(lp.Locale, "str.apnt_step_3_desc") }</p>
			</div>
			<section class="relative bg-base-100 shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2">
				@AppointmentForm(appointment, lp) {
					<input type="hidden" name="id" value={ appointment.ID } id="apnt_datetime_id"/>
					<div class="px-4 py-6 sm:p-8">
						<div class="grid max-w-2xl grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
							<div class="sm:col-span-4">
								<label for="street-address" class="block text-sm font-medium leading-6">{ l(lp.Locale, "str.booked_at") }</label>
								<div class="mt-2">
									<input
										required
										type="datetime-local"
										name="bookedAt"
										if appointment.BookedAt.IsZero() {
											value={ time.Now().Format("2006-01-02T15:04") }
										} else {
											value={ appointment.BookedAt.Format("2006-01-02T15:04") }
										}
										id="booked_at"
										class="input input-bordered block w-full"
									/>
								</div>
							</div>
							<div class="sm:col-span-3">
								<label for="duration" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.duration") }</label>
								<div class="mt-2">
									<input
										required
										min="1"
										max="120"
										type="number"
										id="duration"
										name="duration"
										if appointment.Duration == 0 {
											value="1"
										} else {
											value={ strconv.Itoa(appointment.Duration) }
										}
										class="input input-bordered block w-full"
									/>
								</div>
							</div>
							<div class="sm:col-span-3">
								<label for="cost" class="block text-sm font-medium leading-6 text-base-content">{ l(lp.Locale, "str.cost") }</label>
								<div class="mt-2">
									<input
										required
										type="number"
										id="cost"
										name="cost"
										min="1"
										max="100000"
										step="0.01"
										if appointment.Cost == 0 {
											value="0.00"
										} else {
											value={ appointment.InputCostValue() }
										}
										class="input input-bordered block w-full"
									/>
								</div>
							</div>
							<div class="col-span-full mt-2">
								<label class="relative flex gap-x-3">
									<input
										name="enableNotifications"
										value="1"
										type="checkbox"
										class="checkbox"
									/>
									<div class="text-sm leading-6">
										<span class="font-medium">{ l(lp.Locale, "str.appointment_send_email") }</span>
										<p class="text-base-content/60">{ l(lp.Locale, "str.appointment_send_email_desc") }</p>
									</div>
								</label>
							</div>
						</div>
					</div>
				}
				<div class="flex items-center justify-end gap-x-6 border-t border-base-content/10 px-4 py-4 sm:px-8">
					<button
						form="new_appointment"
						type="submit"
						class="btn btn-primary"
					>{ l(lp.Locale, "btn.save") }</button>
				</div>
			</section>
		</div>
	</div>
}

templ ClinicSearch(lp *Ctx, clinics []model.Clinic) {
	<section class="p-4 md:p-6 bg-base-100 shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2">
		<span class="absolute top-2 right-2 loading loading-ring text-primary loading-md htmx-indicator"></span>
		<label class="relative input input-bordered rounded-full flex items-center gap-2 mb-4">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="w-5 h-5 text-base-content/40"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"></path>
			</svg>
			<input
				class="grow"
				type="search"
				name="query"
				placeholder={ l(lp.Locale, "str.search_clinics") }
				hx-post="/clinics/search"
				hx-trigger="input changed delay:300ms, search"
				hx-target="#clinic_search_results"
				hx-indicator=".htmx-indicator"
			/>
		</label>
		<div class="max-h-72 overflow-y-auto pr-2 -mr-2">
			@ClinicSearchResults(clinics, lp)
		</div>
	</section>
}

templ ClinicSearchResults(clinics []model.Clinic, lp *Ctx) {
	<ul
		id="clinic_search_results"
		role="list"
		class="divide-y divide-base-content/10"
	>
		for i, clinic := range clinics {
			<li>
				<label class="flex items-center justify-between gap-x-6 py-5 cursor-pointer">
					<div class="flex min-w-0 gap-x-4">
						@CmpAvatar(clinic)
						<div class="min-w-0 flex-auto">
							<p class="text-sm font-semibold leading-6">{ clinic.Name }</p>
							<p class="mt-1 truncate text-xs leading-5 text-base-content/50">{ clinic.Email } | { clinic.Phone }</p>
						</div>
					</div>
					<input
						name="clinicId"
						type="radio"
						class="radio"
						form="new_appointment"
						value={ clinic.ID }
						if i == 0 {
							checked
						}
					/>
				</label>
			</li>
		}
		if len(clinics) == 0 {
			<li class="p-4 w-full text-base-content/30">
				<span class="text-sm font-semibold">{ l(lp.Locale, "str.nothing_found") }</span>
			</li>
		}
	</ul>
}

templ PatientSearch(lp *Ctx, patients []model.Patient) {
	<section class="p-4 md:p-6 bg-base-100 shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2">
		<span class="absolute top-2 right-2 loading loading-ring text-primary loading-md htmx-indicator"></span>
		<label class="relative input input-bordered rounded-full flex items-center gap-2 mb-4">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="w-5 h-5 text-base-content/40"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"></path>
			</svg>
			<input
				class="grow"
				type="search"
				name="query"
				placeholder={ l(lp.Locale, "str.search_patients") }
				hx-post="/patients/search"
				hx-trigger="input changed delay:300ms, search"
				hx-target="#patient_search_results"
				hx-indicator=".htmx-indicator"
			/>
		</label>
		<div class="max-h-64 overflow-y-auto pr-2 -mr-2">
			@PatientSearchResults(patients, lp)
		</div>
	</section>
}

templ PatientSearchResults(patients []model.Patient, lp *Ctx) {
	<ul
		id="patient_search_results"
		role="list"
		class="divide-y divide-base-content/10"
	>
		for i, patient := range patients {
			<li>
				<label class="flex items-center justify-between gap-x-6 py-5 cursor-pointer">
					<div class="flex min-w-0 gap-x-4">
						@CmpAvatar(patient)
						<div class="min-w-0 flex-auto">
							<p class="text-sm font-semibold leading-6">{ patient.Name() }</p>
							<p class="mt-1 truncate text-xs leading-5 text-base-content/50">{ patient.Email } | { patient.Phone }</p>
						</div>
					</div>
					<input
						name="patientId"
						type="radio"
						class="radio"
						form="new_appointment"
						value={ patient.ID }
						if i == 0 {
							checked
						}
					/>
				</label>
			</li>
		}
		if len(patients) == 0 {
			<li class="p-4 w-full text-base-content/30">
				<span class="text-sm font-semibold">{ l(lp.Locale, "str.nothing_found") }</span>
			</li>
		}
	</ul>
}

templ AppointmentForm(appointment model.Appointment, lp *Ctx) {
	<form
		id="new_appointment"
		method="POST"
		enctype="multipart/form-data"
		if appointment.ID != "" && appointment.ID != "new" {
			hx-patch={ "/appointments/" + appointment.ID }
			action={ templ.URL("/appointments/" + appointment.ID + "/patch") }
		} else {
			hx-post="/appointments"
			action="/appointments"
		}
		hx-target="closest #appointment_profile_cont"
		hx-select="#appointment_profile_cont"
		hx-swap="outerHTML"
	>
		<span class="absolute top-2 right-2 loading loading-ring text-primary loading-md htmx-indicator"></span>
		{ children... }
	</form>
}
